{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Questions.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport e from 'cors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const questions = [\"Tell us a little about yourself\", \"Out of all the candidates, why should we hire you?\", \"What are your biggest weaknesses?\", \"What are your biggest strengths?\", \"Where do you see yourself in 5 years?\"];\n  const i = 0;\n  const [ans, setans] = useState({\n    answer: \"\"\n  });\n  let name, value;\n\n  const handleInput = e => {\n    name = e.target.answer;\n    value = e.target.value;\n    console.log(name, value);\n    setans({ ...ans,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      answer\n    } = ans;\n    const res = await fetch(\"http://localhost:5000/api/v1/users/answers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        answer\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n  };\n\n  const [customques, setCustomques] = useState(questions);\n\n  function handleClick(e) {\n    e.preventDefault();\n    const newques = document.getElementById('custom-input').value;\n    setCustomques([...customques, newques]);\n  }\n\n  ;\n  const display = customques.map(question => /*#__PURE__*/_jsxDEV(Form, {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlInput1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Question \", customques.indexOf(question) + 1, \" ) \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlTextarea1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Answer here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter password\",\n        autoComplete: \"off\",\n        value: userSignUp.password,\n        onChange: handleInput,\n        name: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"buttons\",\n        onClick: PostData,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 2\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [display, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Add your custom question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"custom-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"buttons custom-button\",\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Questions, \"ecZVwjOL7QPy25LzpIYTa1l3OT0=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/Questions.js"],"names":["React","useState","Form","Button","BrowserRouter","Router","e","Questions","questions","i","ans","setans","answer","name","value","handleInput","target","console","log","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","customques","setCustomques","handleClick","newques","document","getElementById","display","map","question","indexOf","userSignUp","password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Questions.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n \r\n} from \"react-router-dom\";\r\nimport e from 'cors';\r\n\r\n\r\nconst Questions = () => {\r\n\r\n  const questions=[\r\n         \"Tell us a little about yourself\",\r\n         \"Out of all the candidates, why should we hire you?\",\r\n         \"What are your biggest weaknesses?\" ,\r\n         \"What are your biggest strengths?\",\r\n         \"Where do you see yourself in 5 years?\",\r\n   ];\r\n\r\n   const i = 0;\r\n   const [ans, setans] = useState({\r\n     answer : \"\"\r\n \r\n   });\r\n \r\n   let name,value;\r\n   const handleInput = (e) => {\r\n     name = e.target.answer;\r\n     value = e.target.value;\r\n    console.log(name,value)\r\n \r\n    setans({ ...ans, [name] : value});\r\n   }\r\n   const PostData = async (e) => {\r\n      e.preventDefault();\r\n     const {answer} = ans;\r\n      const res = await fetch(\"http://localhost:5000/api/v1/users/answers\",{\r\n        method : \"POST\",\r\n        headers : {\r\n          \"Content-Type\" : \"application/json\"\r\n        },\r\n        body : JSON.stringify({\r\n          answer\r\n        })\r\n     \r\n      });\r\n     \r\n      const data = await res.json();\r\n      console.log(data)\r\n   }\r\n const [customques, setCustomques] = useState(questions);\r\n\r\n function handleClick(e){\r\n    e.preventDefault();\r\n    const newques = document.getElementById('custom-input').value\r\n    setCustomques([...customques, newques]);\r\n };\r\n\r\n const display = customques.map((question) => \r\n <Form className='question'>\r\n       <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Question {customques.indexOf(question) + 1} ) </Form.Label>\r\n        \r\n          <Form.Label>{question}</Form.Label>\r\n              \r\n       </Form.Group>\r\n       <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Answer here</Form.Label>\r\n          {/* <Form.Control as=\"textarea\" rows={5} autoComplete=\"off\" name = \"answer\" id=\"answer\" value={ans.answer} onChange={handleInput} />  */}\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value={userSignUp.password} onChange={handleInput} \r\n          name = \"password\" id=\"password\"/>\r\n          <Button className=\"buttons\" onClick={PostData}>submit</Button> \r\n       </Form.Group>\r\n    </Form>\r\n);\r\n\r\n   return(\r\n      <div className='background'>\r\n        {display}\r\n        <div className=\"question\">\r\n          <h5>Add your custom question</h5>\r\n          <input id=\"custom-input\" type=\"text\"></input>\r\n          <Button className=\"buttons custom-button\" onClick={handleClick}>\r\n            Add\r\n          </Button>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}