{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\LoginEnter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport './navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginEnter = () => {\n  _s();\n\n  const history = useHistory();\n  const [intervieweeLogin, setIntervieweeLogin] = useState({\n    intemail: \"\",\n    intpassword: \"\"\n  });\n  let intname, intvalue;\n\n  const handleInput = e => {\n    intname = e.target.name;\n    intvalue = e.target.value;\n    console.log(intname, intvalue);\n    setIntervieweeLogin({ ...intervieweeLogin,\n      [intname]: intvalue\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      intname,\n      intemail,\n      intpassword,\n      intconfirmPass\n    } = IntervieweeLogin;\n    const res = await fetch(\"http://localhost:5000/api/v1/int/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        intname,\n        intemail,\n        intpassword,\n        intconfirmPass\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n\n    if (data.status === \"error\" || data.status === \"fail\") {\n      if (data.error.statusCode === 422 || !data) {\n        window.alert(\"Invalid Credentials\");\n        console.log(\"Unsuccessful\");\n      } else if (data.error.statusCode === 401 || data.error.statusCode === 400) {\n        window.alert(data.message);\n        console.log(\"Unsuccessful\");\n        history.push(\"/companylogin\");\n      } else if (data.error.statusCode === 500) {\n        window.alert(\"Company Not Registered!\");\n        console.log(\"Unsuccessful\");\n        history.push(\"/companysignup\");\n      }\n    } else {\n      window.alert(\"Successful Login\");\n      console.log(\"Successful\");\n      history.push(\"/loginenter\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"sticky-top\",\n    children: /*#__PURE__*/_jsxDEV(ReactBootStrap.Navbar, {\n      className: \"nav navibar\",\n      collapseOnSelect: true,\n      expand: \"lg\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Navbar.Brand, {\n        className: \"navbrand\",\n        href: \"#home\",\n        children: [\"SyneView \", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weblogo\",\n          src: \"interview.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Nav, {\n          className: \"ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Nav.Link, {\n            className: \"navitem\",\n            as: Link,\n            to: \"\",\n            children: \"Set Questions for Interview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Nav.Link, {\n            className: \"navitem\",\n            as: Link,\n            to: \"/intervieweesignup\",\n            children: \"Create New Interviewee Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navitem\",\n          href: \"https://chat.1410inc.xyz/\",\n          children: \"Start a Video Call \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Nav.Link, {\n          className: \"navitem\",\n          as: Link,\n          to: \"/intervieweesignup\",\n          children: \"Update Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Nav.Link, {\n          className: \"navitem\",\n          as: Link,\n          to: \"/intervieweesignup\",\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginEnter, \"3ZAWoCeQfnqJcEYvpNhT8er6qjo=\", true);\n\n_c = LoginEnter;\nexport default LoginEnter;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginEnter\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/LoginEnter.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","ReactBootStrap","LoginEnter","history","useHistory","intervieweeLogin","setIntervieweeLogin","useState","intemail","intpassword","intname","intvalue","handleInput","e","target","name","value","console","log","PostData","preventDefault","intconfirmPass","IntervieweeLogin","res","fetch","method","headers","body","JSON","stringify","data","json","status","error","statusCode","window","alert","message","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as ReactBootStrap from 'react-bootstrap'\r\nimport './navbar.css';\r\n\r\n\r\nconst LoginEnter = () => {\r\n  \r\n  const history = useHistory();\r\n  const [intervieweeLogin, setIntervieweeLogin] = useState({\r\n    intemail: \"\",\r\n    intpassword : \"\"\r\n\r\n  });\r\n\r\n  let intname,intvalue;\r\n  const handleInput = (e) => {\r\n    intname = e.target.name;\r\n    intvalue = e.target.value;\r\n   console.log(intname,intvalue)\r\n\r\n   setIntervieweeLogin({ ...intervieweeLogin, [intname] : intvalue});\r\n  }\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n   const {intname, intemail, intpassword, intconfirmPass} = IntervieweeLogin;\r\n    const res = await fetch(\"http://localhost:5000/api/v1/int/login\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify({\r\n        intname, intemail, intpassword, intconfirmPass \r\n      })\r\n   \r\n    });\r\n   \r\n    const data = await res.json();\r\n    console.log(data)\r\n\r\n   \r\n    if(data.status === \"error\" || data.status === \"fail\") {\r\n      if(data.error.statusCode === 422 || !data)\r\n      {\r\n       window.alert(\"Invalid Credentials\");\r\n       console.log(\"Unsuccessful\");\r\n   \r\n      }\r\n      else if(data.error.statusCode === 401 || data.error.statusCode === 400 )\r\n      {\r\n       window.alert(data.message);\r\n       console.log(\"Unsuccessful\");\r\n       history.push(\"/companylogin\");\r\n   \r\n      }\r\n      else if(data.error.statusCode === 500)\r\n      {\r\n       window.alert(\"Company Not Registered!\");\r\n       console.log(\"Unsuccessful\");\r\n       history.push(\"/companysignup\");\r\n   \r\n      }\r\n     }\r\n     else\r\n     {\r\n       window.alert(\"Successful Login\");\r\n       console.log(\"Successful\");\r\n       history.push(\"/loginenter\");\r\n     }\r\n   \r\n   };\r\n   \r\n   \r\n   \r\n\r\n\r\n    return (\r\n        <div class='sticky-top' >\r\n            \r\n        <ReactBootStrap.Navbar className=\"nav navibar\" collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n          <ReactBootStrap.Navbar.Brand className=\"navbrand\" href=\"#home\">SyneView <img className=\"weblogo\" src=\"interview.png\" /></ReactBootStrap.Navbar.Brand>\r\n          <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <ReactBootStrap.Nav className=\"ml-auto\">\r\n             <ReactBootStrap.Nav.Link className=\"navitem\" as={Link} to={\"\"}>Set Questions for Interview</ReactBootStrap.Nav.Link>\r\n             <ReactBootStrap.Nav.Link className=\"navitem\" as={Link} to={\"/intervieweesignup\"}>Create New Interviewee Login</ReactBootStrap.Nav.Link>\r\n             </ReactBootStrap.Nav>\r\n            <a className=\"navitem\" href=\"https://chat.1410inc.xyz/\">Start a Video Call </a> \r\n            <ReactBootStrap.Nav.Link className=\"navitem\" as={Link} to={\"/intervieweesignup\"}>Update Details</ReactBootStrap.Nav.Link>\r\n            <ReactBootStrap.Nav.Link className=\"navitem\" as={Link} to={\"/intervieweesignup\"}>Update Password</ReactBootStrap.Nav.Link>\r\n          </ReactBootStrap.Navbar.Collapse>\r\n        </ReactBootStrap.Navbar>\r\n  \r\n        </div>\r\n   \r\n     \r\n        \r\n    )\r\n}\r\n\r\nexport default LoginEnter\r\n"]},"metadata":{},"sourceType":"module"}