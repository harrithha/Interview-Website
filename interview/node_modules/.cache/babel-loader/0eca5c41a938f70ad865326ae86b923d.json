{"ast":null,"code":"var _jsxFileName = \"C:\\\\VScode\\\\Interview-Website\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Questions.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport e from 'cors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Questions() {\n  _s();\n\n  const questions = [{\n    num: 1,\n    ques: \"Tell us a little about yourself\"\n  }, {\n    num: 2,\n    ques: \"Out of all the candidates, why should we hire you?\"\n  }, {\n    num: 3,\n    ques: \"What are your biggest weaknesses?\"\n  }, {\n    num: 4,\n    ques: \"What are your biggest strengths?\"\n  }, {\n    num: 5,\n    ques: \"Where do you see yourself in 5 years?\"\n  }];\n  const display = questions.map(question => /*#__PURE__*/_jsxDEV(Form, {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlInput1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Question \", question.num, \" ) \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: question.ques\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlTextarea1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Answer here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)); // Declare a new state variable, which we'll call \"count\"\n\n  const [customques, setCustomques] = useState([]);\n  const newques = [];\n\n  function handleClick() {\n    newques.push(document.getElementById('custom-input').value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [display, /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"custom-input\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: customques\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: () => setCustomques(customques.push()),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"nNj774rApbMTS3yodGVsji3dXqw=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/VScode/Interview-Website/Interview-Website/interview/src/components/Questions.js"],"names":["React","useState","Form","Button","BrowserRouter","Router","e","Questions","questions","num","ques","display","map","question","customques","setCustomques","newques","handleClick","push","document","getElementById","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,QAGO,kBAHP;AAIA,OAAOC,CAAP,MAAc,MAAd;;;AAGA,SAASC,SAAT,GAAoB;AAAA;;AAGjB,QAAMC,SAAS,GAAE,CACd;AACGC,IAAAA,GAAG,EAAG,CADT;AAEGC,IAAAA,IAAI,EAAG;AAFV,GADc,EAKd;AACED,IAAAA,GAAG,EAAG,CADR;AAEEC,IAAAA,IAAI,EAAG;AAFT,GALc,EASf;AACGD,IAAAA,GAAG,EAAG,CADT;AAEGC,IAAAA,IAAI,EAAG;AAFV,GATe,EAaf;AACGD,IAAAA,GAAG,EAAG,CADT;AAEGC,IAAAA,IAAI,EAAG;AAFV,GAbe,EAiBf;AACGD,IAAAA,GAAG,EAAG,CADT;AAEGC,IAAAA,IAAI,EAAG;AAFV,GAjBe,CAAjB;AAuBA,QAAMC,OAAO,GAAGH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBAC3B,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACM,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,2BAAvC;AAAA,8BACG,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAsBA,QAAQ,CAACJ,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaI,QAAQ,CAACH;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAMM,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,8BAAvC;AAAA,8BACG,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,CAAhB,CA1BiB,CAyCnB;;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMe,OAAO,GAAG,EAAhB;;AAEA,WAASC,WAAT,GAAsB;AACnBD,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAArD;AACF;;AAGC,sBACK;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACEV,OADF,eAEC;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,gBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHD,eAIF;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,MAAMC,aAAa,CAACD,UAAU,CAACI,IAAX,EAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAkBF;;GArEQX,S;;KAAAA,S;AAuET,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './Questions.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n \r\n} from \"react-router-dom\";\r\nimport e from 'cors';\r\n\r\n\r\nfunction Questions(){\r\n\r\n   \r\n   const questions= [\r\n      {\r\n         num : 1,\r\n         ques : \"Tell us a little about yourself\",\r\n      },\r\n      {\r\n        num : 2,\r\n        ques : \"Out of all the candidates, why should we hire you?\",\r\n     },\r\n     {\r\n        num : 3,\r\n        ques : \"What are your biggest weaknesses?\" ,\r\n     },\r\n     {\r\n        num : 4,\r\n        ques : \"What are your biggest strengths?\",\r\n     },\r\n     {\r\n        num : 5,\r\n        ques : \"Where do you see yourself in 5 years?\",\r\n     }];\r\n\r\n   \r\n   const display = questions.map((question) => \r\n      <Form className='question'>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n               <Form.Label>Question {question.num} ) </Form.Label>\r\n               <Form.Label>{question.ques}</Form.Label>\r\n                   \r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n               <Form.Label>Answer here</Form.Label>\r\n               <Form.Control as=\"textarea\" rows={5} />\r\n            </Form.Group>\r\n         </Form>\r\n  \r\n);\r\n \r\n // Declare a new state variable, which we'll call \"count\"\r\n const [customques, setCustomques] = useState([]);\r\n\r\n const newques = [];\r\n \r\n function handleClick(){\r\n    newques.push(document.getElementById('custom-input').value)\r\n }\r\n  \r\n  \r\n   return(\r\n        <div className='background'>\r\n         {display}\r\n         <input id=\"custom-input\" type=\"text\"></input>\r\n         <p>{customques}</p>\r\n      <button className=\"add-button\" onClick={() => setCustomques(customques.push())}>\r\n        Click me\r\n      </button>\r\n        \r\n          {/* <Button className='b' type=\"submit\">\r\n            <a href=\"https://replit.com/join/lhxhuwlnfw-siddharthwala\">\r\n               Try it yourself\r\n            </a>\r\n          \r\n         </Button> */}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n\r\n"]},"metadata":{},"sourceType":"module"}