{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\Questions.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Questions.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const questions = [\"Tell us a little about yourself\", \"Out of all the candidates, why should we hire you?\", \"What are your biggest weaknesses?\", \"What are your biggest strengths?\", \"Where do you see yourself in 5 years?\"];\n  const i = 0;\n  const history = useHistory();\n  const [ans, setans] = useState({\n    ans: \"\"\n  });\n  let name, value;\n\n  const handleInput = e => {\n    name = e.target.ans;\n    value = e.target.value;\n    console.log(name, value);\n    setUserSignUp({ ...ans,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    _s();\n\n    e.preventDefault();\n    const {\n      ans\n    } = ans;\n    const res = await fetch(\"http://localhost:5000/api/v1/users/answers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        confirmPass\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n    const [customques, setCustomques] = useState(questions);\n\n    function handleClick(e) {\n      e.preventDefault();\n      const newques = document.getElementById('custom-input').value;\n      setCustomques([...customques, newques]);\n    }\n\n    ;\n    const display = customques.map(question => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Question \", customques.indexOf(question) + 1, \" ) \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 2\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [display, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"custom-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"b\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://replit.com/join/lhxhuwlnfw-siddharthwala\",\n          children: \"Try it yourself\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(PostData, \"OwuCeJnnBcRuyQY85N6J6tX9aG4=\");\n};\n\n_s2(Questions, \"mcMOwrYVkxfBr0AqqpDRGYIEjfU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/Questions.js"],"names":["React","useState","Form","Button","useHistory","Questions","questions","i","history","ans","setans","name","value","handleInput","e","target","console","log","setUserSignUp","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","email","password","confirmPass","data","json","customques","setCustomques","handleClick","newques","document","getElementById","display","map","question","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Questions.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Questions = () => {\r\n\r\n  const questions=[\r\n         \"Tell us a little about yourself\",\r\n         \"Out of all the candidates, why should we hire you?\",\r\n         \"What are your biggest weaknesses?\" ,\r\n         \"What are your biggest strengths?\",\r\n         \"Where do you see yourself in 5 years?\",\r\n   ];\r\n    const i = 0;\r\n   const history = useHistory();\r\n   const [ans, setans] = useState({\r\n     ans : \"\"\r\n \r\n   });\r\n \r\n   let name,value;\r\n   const handleInput = (e) => {\r\n     name = e.target.ans;\r\n     value = e.target.value;\r\n    console.log(name,value)\r\n \r\n    setUserSignUp({ ...ans, [name] : value});\r\n   }\r\n \r\n \r\n const PostData = async (e) => {\r\n  e.preventDefault();\r\n const {ans} = ans;\r\n  const res = await fetch(\"http://localhost:5000/api/v1/users/answers\",{\r\n    method : \"POST\",\r\n    headers : {\r\n      \"Content-Type\" : \"application/json\"\r\n    },\r\n    body : JSON.stringify({\r\n      name,email,password,confirmPass \r\n    })\r\n \r\n  });\r\n \r\n  const data = await res.json();\r\n  console.log(data)\r\n const [customques, setCustomques] = useState(questions);\r\n\r\n function handleClick(e){\r\n    e.preventDefault();\r\n    const newques = document.getElementById('custom-input').value\r\n    setCustomques([...customques, newques]);\r\n };\r\n\r\n const display = customques.map((question) => \r\n <Form className='question'>\r\n       <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Question {customques.indexOf(question) + 1} ) </Form.Label>\r\n          <Form.Label>{question}</Form.Label>\r\n              \r\n       </Form.Group>\r\n       <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Answer here</Form.Label>\r\n          <Form.Control as=\"textarea\" rows={5} />\r\n          <Button className=\"btn\">submit</Button>\r\n       </Form.Group>\r\n    </Form>\r\n);\r\n\r\n   return(\r\n      <div className='background'>\r\n        {display}\r\n        <input id=\"custom-input\" type=\"text\"></input>\r\n        <button className=\"add-button\" onClick={handleClick}>\r\n          Add\r\n        </button>\r\n        {/* {display_new} */}\r\n        \r\n        <Button className='b' type=\"submit\">\r\n         <a href=\"https://replit.com/join/lhxhuwlnfw-siddharthwala\">\r\n            Try it yourself\r\n         </a>\r\n          \r\n        </Button>\r\n        \r\n      </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Questions\r\n\r\n"]},"metadata":{},"sourceType":"module"}