{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\CompanySignup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './CompanySignup.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostData = async e => {\n  _s();\n\n  e.preventDefault();\n  const history = useHistory(); // const {name, email, password, passwordConfirm} = user;\n\n  const res = await fetch(\"/api/v1/users/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n      passwordConfirm\n    })\n  });\n  const data = await res.json();\n\n  if (data.status === 422 || !data) {\n    window.alert(\"Invalid Registration\");\n    console.log(\"Unsuccessful\");\n  } else {\n    window.alert(\"Valid Registration\");\n    console.log(\"Successful\");\n    history.pushState(\"\");\n  }\n};\n\n_s(PostData, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostData;\n\nconst CompanySignup = () => {\n  _s2();\n\n  const [userSignUp, setUserSignUp] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n\n  const handleInput = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"r\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      className: \"login col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome col-lg-12\",\n        children: \"WELCOME TO COMPANY SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"intro col-lg-12\",\n        children: \"Create an account which will enable you to set questions for interviewees!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"hi\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter full name\",\n            autoComplete: \"off\",\n            value: \"\",\n            onChange: handleInput,\n            name: \"name\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            autoComplete: \"off\",\n            value: \"\",\n            onChange: handleInput,\n            name: \"email\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          className: \"password col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            autoComplete: \"off\",\n            value: \"\",\n            onChange: handleInput,\n            name: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          className: \"password col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 10\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"CONFIRM PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            autoComplete: \"off\",\n            value: \"\",\n            onChange: handleInput,\n            name: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"b\",\n          type: \"submit\",\n          onClick: PostData,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CompanySignup, \"Hk/diEfv/3WPAk1HHv5rGqG73xg=\");\n\n_c2 = CompanySignup;\nexport default CompanySignup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostData\");\n$RefreshReg$(_c2, \"CompanySignup\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/CompanySignup.js"],"names":["React","useState","Form","Button","useHistory","PostData","e","preventDefault","history","res","fetch","method","headers","body","JSON","stringify","name","email","password","passwordConfirm","data","json","status","window","alert","console","log","pushState","CompanySignup","userSignUp","setUserSignUp","handleInput"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './CompanySignup.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst PostData = async (e) => {\r\n e.preventDefault();\r\nconst history = useHistory()\r\n// const {name, email, password, passwordConfirm} = user;\r\n const res = await fetch(\"/api/v1/users/signup\",{\r\n   method : \"POST\",\r\n   headers : {\r\n     \"Content-Type\" : \"application/json\"\r\n   },\r\n   body : JSON.stringify({\r\n     name,email,password,passwordConfirm\r\n   })\r\n\r\n });\r\n\r\n const data = await res.json();\r\n\r\n if(data.status === 422 || !data) {\r\n   window.alert(\"Invalid Registration\");\r\n   console.log(\"Unsuccessful\");\r\n }\r\n else{\r\n  window.alert(\"Valid Registration\");\r\n  console.log(\"Successful\");\r\n\r\n  history.pushState(\"\")\r\n }\r\n}\r\n\r\n\r\nconst CompanySignup = () => {\r\n  const [userSignUp, setUserSignUp] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password : \"\",\r\n    passwordConfirm: \"\"\r\n\r\n  });\r\n  const handleInput = () => {\r\n   \r\n  }\r\n    return (\r\n        <div class='r'>\r\n        \r\n        <Form method = \"POST\" className='login col-lg-12'>\r\n        \r\n        <p className='welcome col-lg-12'>WELCOME TO COMPANY SIGNUP</p>\r\n        <p className='intro col-lg-12'>Create an account which will enable you to set questions for interviewees!!</p>\r\n        \r\n        <Form.Group className='hi'>\r\n        <Form.Group controlId=\"\" className='email col-lg-12'>\r\n          <Form.Label>NAME</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter full name\" autoComplete=\"off\" value=\"\" onChange={handleInput} \r\n          name = \"name\" id=\"name\"/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\" className='email col-lg-12'>\r\n          <Form.Label>USERNAME</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" value=\"\" onChange={handleInput} \r\n          name = \"email\" id=\"email\"/>\r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n        <Form.Label>PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value=\"\" onChange={handleInput} \r\n          name = \"password\" id=\"password\"/>\r\n       </Form.Group>\r\n       <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n         <br /> <br />\r\n        <Form.Label>CONFIRM PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value=\"\" onChange={handleInput} \r\n          name = \"password\" id=\"password\" />\r\n       </Form.Group>\r\n       <br /> <br />\r\n        <Button className='b' type=\"submit\" onClick={PostData}>\r\n          SUBMIT\r\n        </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CompanySignup\r\n"]},"metadata":{},"sourceType":"module"}