{"ast":null,"code":"var _jsxFileName = \"C:\\\\VScode\\\\Interview-Website\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\CompanySignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './CompanySignup.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySignup = () => {\n  _s();\n\n  const [userSignUp, setUserSignUp] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  });\n  let name, value;\n\n  const handleInput = e => {\n    name = e.target.name;\n    value = e.target.value;\n    console.log(name, value);\n    setUserSignUp({ ...userSignUp,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPass\n    } = userSignUp;\n    const res = await fetch(\"http://localhost:5000/api/v1/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        confirmPass\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"Invalid Registration\");\n      console.log(\"Unsuccessful\");\n    } else {\n      window.alert(\"Valid Registration\");\n      console.log(\"Successful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"r\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanySignup, \"5+S7wn47e9SxYNGE7n+SAQu3gLE=\");\n\n_c = CompanySignup;\nexport default CompanySignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySignup\");","map":{"version":3,"sources":["C:/VScode/Interview-Website/Interview-Website/interview/src/components/CompanySignup.js"],"names":["React","useState","Form","Button","BrowserRouter","Router","Switch","Route","Link","CompanySignup","userSignUp","setUserSignUp","name","email","password","confirmPass","value","handleInput","e","target","console","log","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;AAOA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AAC3CW,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,KAAK,EAAE,EAFoC;AAG3CC,IAAAA,QAAQ,EAAG,EAHgC;AAI3CC,IAAAA,WAAW,EAAE;AAJ8B,GAAD,CAA5C;AAQA,MAAIH,IAAJ,EAASI,KAAT;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBN,IAAAA,IAAI,GAAGM,CAAC,CAACC,MAAF,CAASP,IAAhB;AACAI,IAAAA,KAAK,GAAGE,CAAC,CAACC,MAAF,CAASH,KAAjB;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAiBI,KAAjB;AAEAL,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACE,IAAD,GAASI;AAA1B,KAAD,CAAb;AACA,GAND;;AASF,QAAMM,QAAQ,GAAG,MAAOJ,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACK,cAAF;AACD,UAAM;AAACX,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,QAAd;AAAwBC,MAAAA;AAAxB,QAAuCL,UAA7C;AACC,UAAMc,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA6C;AAClEC,MAAAA,MAAM,EAAG,MADyD;AAElEC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFwD;AAKlEC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AACpBlB,QAAAA,IADoB;AACfC,QAAAA,KADe;AACTC,QAAAA,QADS;AACAC,QAAAA;AADA,OAAf;AAL2D,KAA7C,CAAvB;AAWA,UAAMgB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;;AAEA,QAAGD,IAAI,CAACE,MAAL,KAAgB,GAAhB,IAAuB,CAACF,IAA3B,EAAiC;AAC/BG,MAAAA,MAAM,CAACC,KAAP,CAAa,sBAAb;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAHD,MAII;AACHa,MAAAA,MAAM,CAACC,KAAP,CAAa,oBAAb;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA;AACD,GAzBD;;AA6BI,sBACI;AAAK,IAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CC,CA5FL;;GAAMZ,a;;KAAAA,a;AA6FN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './CompanySignup.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst CompanySignup = () => {\r\n  const [userSignUp, setUserSignUp] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password : \"\",\r\n    confirmPass: \"\"\r\n\r\n  });\r\n\r\n  let name,value;\r\n  const handleInput = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n   console.log(name,value)\r\n\r\n   setUserSignUp({ ...userSignUp, [name] : value});\r\n  }\r\n\r\n\r\nconst PostData = async (e) => {\r\n e.preventDefault();\r\nconst {name, email, password, confirmPass} = userSignUp;\r\n const res = await fetch(\"http://localhost:5000/api/v1/users/signup\",{\r\n   method : \"POST\",\r\n   headers : {\r\n     \"Content-Type\" : \"application/json\"\r\n   },\r\n   body : JSON.stringify({\r\n     name,email,password,confirmPass \r\n   })\r\n\r\n });\r\n\r\n const data = await res.json();\r\n\r\n if(data.status === 422 || !data) {\r\n   window.alert(\"Invalid Registration\");\r\n   console.log(\"Unsuccessful\");\r\n }\r\n else{\r\n  window.alert(\"Valid Registration\");\r\n  console.log(\"Successful\");\r\n\r\n }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div class='r'>\r\n        \r\n        {/* <Form method = \"POST\" className='login col-lg-12'>\r\n        \r\n        <p className='welcome col-lg-12'>WELCOME TO COMPANY SIGNUP</p>\r\n        <p className='intro col-lg-12'>Create an account which will enable you to set questions for interviewees!!</p>\r\n        \r\n        <Form.Group className='hi'>\r\n        <Form.Group controlId=\"\" className='email col-lg-12'>\r\n          <Form.Label>NAME</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter full name\" autoComplete=\"off\" value={userSignUp.name} onChange={handleInput} \r\n          name = \"name\" id=\"name\"/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\" className='email col-lg-12'>\r\n          <Form.Label>USERNAME</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" value={userSignUp.email} onChange={handleInput} \r\n          name = \"email\" id=\"email\"/>\r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n          <Form.Label>PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value={userSignUp.password} onChange={handleInput} \r\n          name = \"password\" id=\"password\"/>\r\n        </Form.Group>\r\n        <br /> <br />\r\n        <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n          <Form.Label>CONFIRM PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm password\" autoComplete=\"off\" value={userSignUp.confirmPass} onChange={handleInput} \r\n          name = \"confirmPass\" id=\"confirmPass\"/>\r\n        </Form.Group>\r\n\r\n       <br /> <br />  \r\n        <Button className='b' type=\"submit\" onClick={PostData}>\r\n          <Link to = \"/companylogin\">\r\n            SUBMIT\r\n          </Link>\r\n        </Button>\r\n        </Form.Group>\r\n    </Form> */}\r\n\r\n    </div>\r\n    )\r\n    }\r\nexport default CompanySignup\r\n"]},"metadata":{},"sourceType":"module"}