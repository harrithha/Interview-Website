{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\UpdateDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './CompanySignup.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { name, email } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateDetails = () => {\n  _s();\n\n  const history = useHistory();\n  const [userSignUp, setUserSignUp] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  });\n  let name, value;\n\n  const handleInput = e => {\n    name = e.target.name;\n    value = e.target.value;\n    console.log(name, value);\n    setUserSignUp({ ...userSignUp,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPass\n    } = userSignUp;\n    const res = await fetch(\"http://localhost:5000/api/v1/users/updateMe\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        confirmPass\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n\n    if (data.status === \"error\" || data.status === \"fail\") {\n      if (data.error.statusCode === 422 || !data) {\n        window.alert(\"Invalid Credentials : \" + window.alert(data.message));\n        console.log(\"Unsuccessful\");\n      } else if (data.error.statusCode === 401 || data.error.statusCode === 400 || data.error.statusCode === 500) {\n        window.alert(data.message);\n        window.alert(\"Not Registered\");\n        console.log(\"Unsuccessful\");\n      }\n    } else {\n      window.alert(\"Successful Signup\");\n      console.log(\"Successful\");\n      history.push(\"/companylogin\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"r\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      className: \"login col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome col-lg-12\",\n        children: \"UPDATE DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"intro col-lg-12\",\n        children: \"Edit the below fields to Update!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"hi\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter full name\",\n            autoComplete: \"off\",\n            value: userSignUp.name,\n            onChange: handleInput,\n            name: \"name\",\n            id: \"name\",\n            defaultValue: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            autoComplete: \"off\",\n            value: userSignUp.email,\n            onChange: handleInput,\n            name: \"email\",\n            id: \"email\",\n            defaultValue: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 8\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"b\",\n          type: \"submit\",\n          onClick: PostData,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateDetails, \"qgLMWqZst8+72ctbS1IpY10yj+8=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateDetails;\nexport default UpdateDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDetails\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/UpdateDetails.js"],"names":["React","useState","Form","Button","useHistory","BrowserRouter","Router","Switch","Route","Link","name","email","UpdateDetails","history","userSignUp","setUserSignUp","password","confirmPass","value","handleInput","e","target","console","log","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","error","statusCode","window","alert","message","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './CompanySignup.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport{name,email} from './'\r\n\r\nconst UpdateDetails = () => {\r\n  const history = useHistory();\r\n  const [userSignUp, setUserSignUp] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password : \"\",\r\n    confirmPass: \"\"\r\n\r\n  });\r\n\r\n  let name,value;\r\n  const handleInput = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n   console.log(name,value)\r\n\r\n   setUserSignUp({ ...userSignUp, [name] : value});\r\n  }\r\n\r\n\r\nconst PostData = async (e) => {\r\n e.preventDefault();\r\nconst {name, email, password, confirmPass} = userSignUp;\r\n const res = await fetch(\"http://localhost:5000/api/v1/users/updateMe\",{\r\n   method : \"POST\",\r\n   headers : {\r\n     \"Content-Type\" : \"application/json\"\r\n   },\r\n   body : JSON.stringify({\r\n     name,email,password,confirmPass \r\n   })\r\n\r\n });\r\n\r\n const data = await res.json();\r\n console.log(data)\r\n if(data.status === \"error\" || data.status === \"fail\") {\r\n   if(data.error.statusCode === 422 || !data)\r\n   {\r\n    window.alert(\"Invalid Credentials : \"  + window.alert(data.message));\r\n    console.log(\"Unsuccessful\");\r\n\r\n   }\r\n   else if(data.error.statusCode === 401 || data.error.statusCode === 400 || data.error.statusCode === 500)\r\n   {\r\n    window.alert(data.message);\r\n    window.alert(\"Not Registered\");\r\n    console.log(\"Unsuccessful\");\r\n\r\n   }\r\n  }\r\n  else\r\n  {\r\n    window.alert(\"Successful Signup\");\r\n    console.log(\"Successful\");\r\n    history.push(\"/companylogin\");\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n    return (\r\n        <div class='r'>\r\n        \r\n        <Form method = \"POST\" className='login col-lg-12'>\r\n        \r\n        <p className='welcome col-lg-12'>UPDATE DETAILS</p>\r\n        <p className='intro col-lg-12'>Edit the below fields to Update!</p>\r\n        \r\n        <Form.Group className='hi'>\r\n        <Form.Group controlId=\"\" className='email col-lg-12'>\r\n          <Form.Label>NAME</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter full name\" autoComplete=\"off\" value={userSignUp.name} onChange={handleInput} \r\n          name = \"name\" id=\"name\" defaultValue = \"Hello\"/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\" className='email col-lg-12'>\r\n          <Form.Label>USERNAME</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" value={userSignUp.email} onChange={handleInput} \r\n          name = \"email\" id=\"email\" defaultValue = \"Hello\"/>\r\n        </Form.Group>\r\n\r\n       <br /> <br />  \r\n        <Button className='b' type=\"submit\" onClick={PostData}>\r\n            SUBMIT\r\n        </Button>\r\n        </Form.Group>\r\n    </Form>\r\n\r\n    </div>\r\n    )\r\n    }\r\nexport default UpdateDetails\r\n"]},"metadata":{},"sourceType":"module"}