{"ast":null,"code":"var _jsxFileName = \"C:\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\IntervieweeLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './IntervieweeLogin.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IntervieweeLogin = () => {\n  _s();\n\n  const [intervieweeLogin, setIntervieweeLogin] = useState({\n    intemail: \"\",\n    intpassword: \"\"\n  });\n  let intname, intvalue;\n\n  const handleInput = e => {\n    intname = e.target.name;\n    intvalue = e.target.value;\n    console.log(name, value);\n    setIntervieweeLogin({ ...intervieweeLogin,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      intemail,\n      intpassword\n    } = IntervieweeLogin;\n    const res = await fetch(\"http://localhost:5000/api/v1/int/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        intemail,\n        intpassword\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"Invalid Credentials\");\n      console.log(\"Unsuccessful\");\n    } else {\n      window.alert(\"Valid Login\");\n      console.log(\"Successful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"r\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome col-lg-12\",\n        children: \"WELCOME TO INTERVIEWEE LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"intro col-lg-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"hi\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            autoComplete: \"off\",\n            value: intervieweeLogin.email,\n            onChange: handleInput,\n            name: \"email\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          className: \"password col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            autoComplete: \"off\",\n            value: intervieweeLogin.password,\n            onChange: handleInput,\n            name: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"b\",\n          type: \"submit\",\n          onClick: PostData,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IntervieweeLogin, \"xbs/p8j5BLMbAwbYQfm80ObShbw=\");\n\n_c = IntervieweeLogin;\nexport default IntervieweeLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"IntervieweeLogin\");","map":{"version":3,"sources":["C:/Interview-Website/interview/src/components/IntervieweeLogin.js"],"names":["React","useState","Form","Button","IntervieweeLogin","intervieweeLogin","setIntervieweeLogin","intemail","intpassword","intname","intvalue","handleInput","e","target","name","value","console","log","PostData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","email","password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './IntervieweeLogin.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst IntervieweeLogin = () => {\r\n  const [intervieweeLogin, setIntervieweeLogin] = useState({\r\n    intemail: \"\",\r\n    intpassword : \"\"\r\n\r\n  });\r\n\r\n  let intname,intvalue;\r\n  const handleInput = (e) => {\r\n    intname = e.target.name;\r\n    intvalue = e.target.value;\r\n   console.log(name,value)\r\n\r\n   setIntervieweeLogin({ ...intervieweeLogin, [name] : value});\r\n  }\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n   const {intemail, intpassword} = IntervieweeLogin;\r\n    const res = await fetch(\"http://localhost:5000/api/v1/int/login\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify({\r\n        intemail,intpassword \r\n      })\r\n   \r\n    });\r\n   \r\n    const data = await res.json();\r\n   \r\n    if(data.status === 422 || !data) {\r\n      window.alert(\"Invalid Credentials\");\r\n      console.log(\"Unsuccessful\");\r\n    }\r\n    else{\r\n     window.alert(\"Valid Login\");\r\n     console.log(\"Successful\");\r\n   \r\n    }\r\n   }\r\n   \r\n\r\n\r\n    return (\r\n        <div class='r'>\r\n        \r\n        <Form className='login col-lg-12'>\r\n        \r\n        <p className='welcome col-lg-12'>WELCOME TO INTERVIEWEE LOGIN</p>\r\n        <p className='intro col-lg-12'></p>\r\n        \r\n        <Form.Group className='hi'>\r\n        <Form.Group controlId=\"formBasicEmail\" className='email col-lg-12'>\r\n          <Form.Label>USERNAME</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" value={intervieweeLogin.email} onChange={handleInput} \r\n          name = \"email\" id=\"email\"/>\r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n          <Form.Label>PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value={intervieweeLogin.password} onChange={handleInput} \r\n          name = \"password\" id=\"password\"/>\r\n        </Form.Group>\r\n       <br /> <br /> <br />\r\n        <Button className='b' type=\"submit\" onClick={PostData}>\r\n          SUBMIT\r\n        </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      </div>\r\n    )\r\n    }\r\n\r\nexport default IntervieweeLogin\r\n"]},"metadata":{},"sourceType":"module"}