{"ast":null,"code":"var _jsxFileName = \"C:\\\\VScode\\\\Interview-Website\\\\Interview-Website\\\\interview\\\\src\\\\components\\\\CompanyLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './CompanyLogin.css';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyLogin = () => {\n  _s();\n\n  const [userLogin, setUserLogin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let name, value;\n\n  const handleInput = e => {\n    name = e.target.name;\n    value = e.target.value;\n    console.log(name, value);\n    setUserLogin({ ...userLogin,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPass\n    } = userLogin;\n    const res = await fetch(\"http://localhost:5000/api/v1/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        confirmPass\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"Invalid Credentials\");\n      console.log(\"Unsuccessful\");\n    } else {\n      window.alert(\"Valid Login\");\n      console.log(\"Successful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"r\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome col-lg-12\",\n        children: \"WELCOME TO COMPANY LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"intro col-lg-12\",\n        children: \"You can set your own questions for the interviewees!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"hi\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          className: \"email col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            autoComplete: \"off\",\n            value: userLogin.email,\n            onChange: handleInput,\n            name: \"email\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          className: \"password col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            autoComplete: \"off\",\n            value: userLogin.password,\n            onChange: handleInput,\n            name: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"b\",\n          type: \"submit\",\n          onClick: PostData,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyLogin, \"NCCYBLzn6zskWBA42GZVVGMX+gM=\");\n\n_c = CompanyLogin;\nexport default CompanyLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyLogin\");","map":{"version":3,"sources":["C:/VScode/Interview-Website/Interview-Website/interview/src/components/CompanyLogin.js"],"names":["React","useState","Form","Button","CompanyLogin","userLogin","setUserLogin","email","password","name","value","handleInput","e","target","console","log","PostData","preventDefault","confirmPass","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './CompanyLogin.css';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst CompanyLogin = () => {\r\n  const [userLogin, setUserLogin] = useState({\r\n    email: \"\",\r\n    password : \"\"\r\n\r\n  });\r\n\r\n  let name,value;\r\n  const handleInput = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n   console.log(name,value)\r\n\r\n   setUserLogin({ ...userLogin, [name] : value});\r\n  }\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n   const {name, email, password, confirmPass} = userLogin;\r\n    const res = await fetch(\"http://localhost:5000/api/v1/users/login\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify({\r\n        name,email,password,confirmPass \r\n      })\r\n   \r\n    });\r\n   \r\n    const data = await res.json();\r\n   \r\n    if(data.status === 422 || !data) {\r\n      window.alert(\"Invalid Credentials\");\r\n      console.log(\"Unsuccessful\");\r\n    }\r\n    else{\r\n     window.alert(\"Valid Login\");\r\n     console.log(\"Successful\");\r\n   \r\n    }\r\n   }\r\n   \r\n\r\n\r\n    return (\r\n        <div class='r'>\r\n        \r\n        <Form className='login col-lg-12'>\r\n        \r\n        <p className='welcome col-lg-12'>WELCOME TO COMPANY LOGIN</p>\r\n        <p className='intro col-lg-12'>You can set your own questions for the interviewees!!!</p>\r\n        \r\n        <Form.Group className='hi'>\r\n        <Form.Group controlId=\"formBasicEmail\" className='email col-lg-12'>\r\n          <Form.Label>USERNAME</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\" value={userLogin.email} onChange={handleInput} \r\n          name = \"email\" id=\"email\"/>\r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formBasicPassword\" className='password col-lg-12'>\r\n          <Form.Label>PASSWORD</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter password\" autoComplete=\"off\" value={userLogin.password} onChange={handleInput} \r\n          name = \"password\" id=\"password\"/>\r\n        </Form.Group>\r\n       <br /> <br /> <br />\r\n        <Button className='b' type=\"submit\" onClick={PostData}>\r\n          SUBMIT\r\n        </Button>\r\n        </Form.Group>\r\n      </Form>\r\n      </div>\r\n    )\r\n    }\r\n\r\nexport default CompanyLogin\r\n"]},"metadata":{},"sourceType":"module"}